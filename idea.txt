Привет, поможешь мне реализовать такой проект на Django, React и Tailwind?

URL Shortener работает по следующему принципу:
Сокращение URL: Каждому длинному URL-адресу присваивается уникальный ключ, который добавляется после домена. Например, http://tinyurl.com/m3q2xt имеет ключ m3q2xt.
Редирект: Когда пользователь нажимает на сокращенный URL, происходит редирект на оригинальный длинный URL. Это происходит через HTTP-статусы, такие как 301, 302, 307 или 308.
База данных: Сокращенный URL и соответствующий длинный URL хранятся в базе данных. При запросе сокращенного URL, система выполняет поиск в базе данных по ключу и перенаправляет на оригинальный URL.
Уникальность: Уникальность сокращенного URL обеспечивается с помощью различных методов, таких как хеширование (например, Base62 или MD5) или случайное генерирование ключей.
Безопасность: Для обеспечения безопасности URL Shortener может использовать автоматическое обнаружение вредоносного контента и другие меры предосторожности.
Таким образом, URL Shortener позволяет преобразовывать длинные URL-адреса в короткие, более удобные для использования, при этом обеспечивая уникальность и безопасность.

# myshorturl

Цель проекта разработать небольшой проект с целью научиться использовать в связке Django, React, Tailwind, Docker. Если не получится использовать React, то предполагается простое использование HTML. Сам проект представляет из себя платформу для переадресации url адресов. Если точнее, то платформа для создания собственных url адресов, укороченных или наоборот удлинённых, как пожелает пользователь. 

** Основные моменты при разработке **

- Необходимо интегрировать в проект React.js 
- Далее настроить конифигурацию React
- Продумать визуальную составляющую сайта
- Импортировать Tailwind в React и выполнить его настройку
- Сверстать проект на React и Tailwind

- Далее необходимо разработать Django проект
- Выполнить настройку Django ОРМ и проработать БД
- Разработать POST запросы и весь функционал для работы системы
- Провести тестирование и проверить работоспособность
- Выявить баги и внести фиксы

- Далее необходимо связать React и Django
- Провести тестирование работы фронта и бэка
- Настроить серверную составляющую
- Внедрить внутрь проекта Docker, запускающий React и Django
- Добавить файл requirements.txt и произвести настройку конфигурации

** Техническое задание **

- Проработать user профили и добавить возможность просмотров своих url 
- Реализовать возможность редактирования существующий url 
- В полной мере разработать возможность переадресации url адресов
- Если будет возможность и время реализовать главную страничку с описанием проекта